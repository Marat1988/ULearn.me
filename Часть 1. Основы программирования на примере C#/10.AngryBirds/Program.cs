using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _10.AngryBirds
{
    class Program
    {
        /*Скачайте архив с проектом AngryBirds. Откройте файл с расширением .csproj в IDE (Visual Studio или Rider). Это простой симулятор системы прицеливания. В файле AngryBirdsTask реализуйте функцию расчета угла прицеливания, в зависимости от начальной скорости снаряда и дальности до цели. 
         * Если решения не существует, метод должен возвращать double.NaN. Проверьте корректность своего решения, запустив проект.
         * Вы можете изучить устройство проекта — это будет полезно, но для выполнения этого задания это совсем не обязательно. 
         * Более того, будьте готовы к тому, что в проекте активно используются ещё не пройденные темы.
         * Детали:
         * Сопротивлением воздуха можно пренебречь
         * Ускорение свободного падения g = 9.8 м/с2
         * Иногда может существовать два решения: навесной траекторией и прямой наводкой. Вам нужно решение прямой наводкой, то есть с минимальным временем подлёта снаряда.
         * Освежить свои знания по физике всегда можно в википедии прочитав статью про равноускоренное движение (https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B2%D0%BD%D0%BE%D1%83%D1%81%D0%BA%D0%BE%D1%80%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5_%D0%B4%D0%B2%D0%B8%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5)
*/
        public static double FindSightAngle(double v, double distance)
        {
            return 0.5 * Math.Asin((9.8 * distance) / (v * v));
        }

        static void Main(string[] args)
        {
        }
    }
}
